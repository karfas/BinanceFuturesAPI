# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""AggregateTradesResponse_inner

    AggregateTradesResponseInner(;
        a=nothing,
        p=nothing,
        q=nothing,
        f=nothing,
        l=nothing,
        T=nothing,
        m=nothing,
    )

    - a::Int64 : Aggregate trade ID
    - p::String : Price
    - q::String : Quantity (aggregated)
    - f::Int64 : First trade ID in the aggregate
    - l::Int64 : Last trade ID in the aggregate
    - T::Int64 : Timestamp
    - m::Bool : Was the buyer the maker?
"""
Base.@kwdef mutable struct AggregateTradesResponseInner <: OpenAPI.APIModel
    a::Union{Nothing, Int64} = nothing
    p::Union{Nothing, String} = nothing
    q::Union{Nothing, String} = nothing
    f::Union{Nothing, Int64} = nothing
    l::Union{Nothing, Int64} = nothing
    T::Union{Nothing, Int64} = nothing
    m::Union{Nothing, Bool} = nothing

    function AggregateTradesResponseInner(a, p, q, f, l, T, m, )
        OpenAPI.validate_property(AggregateTradesResponseInner, Symbol("a"), a)
        OpenAPI.validate_property(AggregateTradesResponseInner, Symbol("p"), p)
        OpenAPI.validate_property(AggregateTradesResponseInner, Symbol("q"), q)
        OpenAPI.validate_property(AggregateTradesResponseInner, Symbol("f"), f)
        OpenAPI.validate_property(AggregateTradesResponseInner, Symbol("l"), l)
        OpenAPI.validate_property(AggregateTradesResponseInner, Symbol("T"), T)
        OpenAPI.validate_property(AggregateTradesResponseInner, Symbol("m"), m)
        return new(a, p, q, f, l, T, m, )
    end
end # type AggregateTradesResponseInner

const _property_types_AggregateTradesResponseInner = Dict{Symbol,String}(Symbol("a")=>"Int64", Symbol("p")=>"String", Symbol("q")=>"String", Symbol("f")=>"Int64", Symbol("l")=>"Int64", Symbol("T")=>"Int64", Symbol("m")=>"Bool", )
OpenAPI.property_type(::Type{ AggregateTradesResponseInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AggregateTradesResponseInner[name]))}

function check_required(o::AggregateTradesResponseInner)
    true
end

function OpenAPI.validate_property(::Type{ AggregateTradesResponseInner }, name::Symbol, val)
    if name === Symbol("a")
        OpenAPI.validate_param(name, "AggregateTradesResponseInner", :format, val, "int64")
    end
    if name === Symbol("f")
        OpenAPI.validate_param(name, "AggregateTradesResponseInner", :format, val, "int64")
    end
    if name === Symbol("l")
        OpenAPI.validate_param(name, "AggregateTradesResponseInner", :format, val, "int64")
    end
    if name === Symbol("T")
        OpenAPI.validate_param(name, "AggregateTradesResponseInner", :format, val, "int64")
    end
end
