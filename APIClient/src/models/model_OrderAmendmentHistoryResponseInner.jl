# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""OrderAmendmentHistoryResponse_inner

    OrderAmendmentHistoryResponseInner(;
        amendId=nothing,
        symbol=nothing,
        orderId=nothing,
        clientOrderId=nothing,
        oldClientOrderId=nothing,
        oldPrice=nothing,
        oldQty=nothing,
        price=nothing,
        qty=nothing,
        amendTime=nothing,
        amendStatus=nothing,
        rejectReason=nothing,
    )

    - amendId::Int64 : Amendment ID
    - symbol::String : Trading pair symbol
    - orderId::Int64 : Order ID
    - clientOrderId::String : Client order ID
    - oldClientOrderId::String : Previous client order ID
    - oldPrice::String : Previous price
    - oldQty::String : Previous quantity
    - price::String : New price
    - qty::String : New quantity
    - amendTime::Int64 : Amendment timestamp
    - amendStatus::String : Amendment status
    - rejectReason::String : Rejection reason if amendment was rejected
"""
Base.@kwdef mutable struct OrderAmendmentHistoryResponseInner <: OpenAPI.APIModel
    amendId::Union{Nothing, Int64} = nothing
    symbol::Union{Nothing, String} = nothing
    orderId::Union{Nothing, Int64} = nothing
    clientOrderId::Union{Nothing, String} = nothing
    oldClientOrderId::Union{Nothing, String} = nothing
    oldPrice::Union{Nothing, String} = nothing
    oldQty::Union{Nothing, String} = nothing
    price::Union{Nothing, String} = nothing
    qty::Union{Nothing, String} = nothing
    amendTime::Union{Nothing, Int64} = nothing
    amendStatus::Union{Nothing, String} = nothing
    rejectReason::Union{Nothing, String} = nothing

    function OrderAmendmentHistoryResponseInner(amendId, symbol, orderId, clientOrderId, oldClientOrderId, oldPrice, oldQty, price, qty, amendTime, amendStatus, rejectReason, )
        OpenAPI.validate_property(OrderAmendmentHistoryResponseInner, Symbol("amendId"), amendId)
        OpenAPI.validate_property(OrderAmendmentHistoryResponseInner, Symbol("symbol"), symbol)
        OpenAPI.validate_property(OrderAmendmentHistoryResponseInner, Symbol("orderId"), orderId)
        OpenAPI.validate_property(OrderAmendmentHistoryResponseInner, Symbol("clientOrderId"), clientOrderId)
        OpenAPI.validate_property(OrderAmendmentHistoryResponseInner, Symbol("oldClientOrderId"), oldClientOrderId)
        OpenAPI.validate_property(OrderAmendmentHistoryResponseInner, Symbol("oldPrice"), oldPrice)
        OpenAPI.validate_property(OrderAmendmentHistoryResponseInner, Symbol("oldQty"), oldQty)
        OpenAPI.validate_property(OrderAmendmentHistoryResponseInner, Symbol("price"), price)
        OpenAPI.validate_property(OrderAmendmentHistoryResponseInner, Symbol("qty"), qty)
        OpenAPI.validate_property(OrderAmendmentHistoryResponseInner, Symbol("amendTime"), amendTime)
        OpenAPI.validate_property(OrderAmendmentHistoryResponseInner, Symbol("amendStatus"), amendStatus)
        OpenAPI.validate_property(OrderAmendmentHistoryResponseInner, Symbol("rejectReason"), rejectReason)
        return new(amendId, symbol, orderId, clientOrderId, oldClientOrderId, oldPrice, oldQty, price, qty, amendTime, amendStatus, rejectReason, )
    end
end # type OrderAmendmentHistoryResponseInner

const _property_types_OrderAmendmentHistoryResponseInner = Dict{Symbol,String}(Symbol("amendId")=>"Int64", Symbol("symbol")=>"String", Symbol("orderId")=>"Int64", Symbol("clientOrderId")=>"String", Symbol("oldClientOrderId")=>"String", Symbol("oldPrice")=>"String", Symbol("oldQty")=>"String", Symbol("price")=>"String", Symbol("qty")=>"String", Symbol("amendTime")=>"Int64", Symbol("amendStatus")=>"String", Symbol("rejectReason")=>"String", )
OpenAPI.property_type(::Type{ OrderAmendmentHistoryResponseInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_OrderAmendmentHistoryResponseInner[name]))}

function check_required(o::OrderAmendmentHistoryResponseInner)
    true
end

function OpenAPI.validate_property(::Type{ OrderAmendmentHistoryResponseInner }, name::Symbol, val)

    if name === Symbol("amendId")
        OpenAPI.validate_param(name, "OrderAmendmentHistoryResponseInner", :format, val, "int64")
    end


    if name === Symbol("orderId")
        OpenAPI.validate_param(name, "OrderAmendmentHistoryResponseInner", :format, val, "int64")
    end







    if name === Symbol("amendTime")
        OpenAPI.validate_param(name, "OrderAmendmentHistoryResponseInner", :format, val, "int64")
    end

    if name === Symbol("amendStatus")
        OpenAPI.validate_param(name, "OrderAmendmentHistoryResponseInner", :enum, val, ["ACCEPTED", "REJECTED"])
    end


end
