# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""PositionMarginHistoryResponse_inner

    PositionMarginHistoryResponseInner(;
        amount=nothing,
        asset=nothing,
        symbol=nothing,
        time=nothing,
        type=nothing,
        positionSide=nothing,
    )

    - amount::String : Amount of margin
    - asset::String : Asset used for margin
    - symbol::String : Trading pair symbol
    - time::Int64 : Operation time
    - type::Int64 : Margin type (1: Add, 2: Reduce) 
    - positionSide::String : Position side (BOTH/LONG/SHORT)
"""
Base.@kwdef mutable struct PositionMarginHistoryResponseInner <: OpenAPI.APIModel
    amount::Union{Nothing, String} = nothing
    asset::Union{Nothing, String} = nothing
    symbol::Union{Nothing, String} = nothing
    time::Union{Nothing, Int64} = nothing
    type::Union{Nothing, Int64} = nothing
    positionSide::Union{Nothing, String} = nothing

    function PositionMarginHistoryResponseInner(amount, asset, symbol, time, type, positionSide, )
        OpenAPI.validate_property(PositionMarginHistoryResponseInner, Symbol("amount"), amount)
        OpenAPI.validate_property(PositionMarginHistoryResponseInner, Symbol("asset"), asset)
        OpenAPI.validate_property(PositionMarginHistoryResponseInner, Symbol("symbol"), symbol)
        OpenAPI.validate_property(PositionMarginHistoryResponseInner, Symbol("time"), time)
        OpenAPI.validate_property(PositionMarginHistoryResponseInner, Symbol("type"), type)
        OpenAPI.validate_property(PositionMarginHistoryResponseInner, Symbol("positionSide"), positionSide)
        return new(amount, asset, symbol, time, type, positionSide, )
    end
end # type PositionMarginHistoryResponseInner

const _property_types_PositionMarginHistoryResponseInner = Dict{Symbol,String}(Symbol("amount")=>"String", Symbol("asset")=>"String", Symbol("symbol")=>"String", Symbol("time")=>"Int64", Symbol("type")=>"Int64", Symbol("positionSide")=>"String", )
OpenAPI.property_type(::Type{ PositionMarginHistoryResponseInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PositionMarginHistoryResponseInner[name]))}

function check_required(o::PositionMarginHistoryResponseInner)
    true
end

function OpenAPI.validate_property(::Type{ PositionMarginHistoryResponseInner }, name::Symbol, val)




    if name === Symbol("time")
        OpenAPI.validate_param(name, "PositionMarginHistoryResponseInner", :format, val, "int64")
    end


end
