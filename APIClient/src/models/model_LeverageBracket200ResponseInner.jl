# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""leverage_bracket_200_response_inner

    LeverageBracket200ResponseInner(;
        symbol=nothing,
        brackets=nothing,
    )

    - symbol::String : Trading pair
    - brackets::Vector{LeverageBracket200ResponseInnerBracketsInner} : Bracket information
"""
Base.@kwdef mutable struct LeverageBracket200ResponseInner <: OpenAPI.APIModel
    symbol::Union{Nothing, String} = nothing
    brackets::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{LeverageBracket200ResponseInnerBracketsInner} }

    function LeverageBracket200ResponseInner(symbol, brackets, )
        OpenAPI.validate_property(LeverageBracket200ResponseInner, Symbol("symbol"), symbol)
        OpenAPI.validate_property(LeverageBracket200ResponseInner, Symbol("brackets"), brackets)
        return new(symbol, brackets, )
    end
end # type LeverageBracket200ResponseInner

const _property_types_LeverageBracket200ResponseInner = Dict{Symbol,String}(Symbol("symbol")=>"String", Symbol("brackets")=>"Vector{LeverageBracket200ResponseInnerBracketsInner}", )
OpenAPI.property_type(::Type{ LeverageBracket200ResponseInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_LeverageBracket200ResponseInner[name]))}

function check_required(o::LeverageBracket200ResponseInner)
    true
end

function OpenAPI.validate_property(::Type{ LeverageBracket200ResponseInner }, name::Symbol, val)


end
