# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ApiTradingStatusResponse_indicators_BTCUSDT

    ApiTradingStatusResponseIndicatorsBTCUSDT(;
        IFER=nothing,
        GCR=nothing,
        UFR=nothing,
    )

    - IFER::Int64 : FOK/IOC order count of the symbol
    - GCR::Int64 : GTC order count of the symbol
    - UFR::Int64 : Order count of the symbol
"""
Base.@kwdef mutable struct ApiTradingStatusResponseIndicatorsBTCUSDT <: OpenAPI.APIModel
    IFER::Union{Nothing, Int64} = nothing
    GCR::Union{Nothing, Int64} = nothing
    UFR::Union{Nothing, Int64} = nothing

    function ApiTradingStatusResponseIndicatorsBTCUSDT(IFER, GCR, UFR, )
        OpenAPI.validate_property(ApiTradingStatusResponseIndicatorsBTCUSDT, Symbol("IFER"), IFER)
        OpenAPI.validate_property(ApiTradingStatusResponseIndicatorsBTCUSDT, Symbol("GCR"), GCR)
        OpenAPI.validate_property(ApiTradingStatusResponseIndicatorsBTCUSDT, Symbol("UFR"), UFR)
        return new(IFER, GCR, UFR, )
    end
end # type ApiTradingStatusResponseIndicatorsBTCUSDT

const _property_types_ApiTradingStatusResponseIndicatorsBTCUSDT = Dict{Symbol,String}(Symbol("IFER")=>"Int64", Symbol("GCR")=>"Int64", Symbol("UFR")=>"Int64", )
OpenAPI.property_type(::Type{ ApiTradingStatusResponseIndicatorsBTCUSDT }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ApiTradingStatusResponseIndicatorsBTCUSDT[name]))}

function check_required(o::ApiTradingStatusResponseIndicatorsBTCUSDT)
    true
end

function OpenAPI.validate_property(::Type{ ApiTradingStatusResponseIndicatorsBTCUSDT }, name::Symbol, val)



end
