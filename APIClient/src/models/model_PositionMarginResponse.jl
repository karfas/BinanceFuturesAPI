# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""PositionMarginResponse

    PositionMarginResponse(;
        amount=nothing,
        code=nothing,
        msg=nothing,
        type=nothing,
    )

    - amount::String : Amount of margin
    - code::Int64 : Response code
    - msg::String : Response message
    - type::Int64 : Margin type (1: Add, 2: Reduce) 
"""
Base.@kwdef mutable struct PositionMarginResponse <: OpenAPI.APIModel
    amount::Union{Nothing, String} = nothing
    code::Union{Nothing, Int64} = nothing
    msg::Union{Nothing, String} = nothing
    type::Union{Nothing, Int64} = nothing

    function PositionMarginResponse(amount, code, msg, type, )
        OpenAPI.validate_property(PositionMarginResponse, Symbol("amount"), amount)
        OpenAPI.validate_property(PositionMarginResponse, Symbol("code"), code)
        OpenAPI.validate_property(PositionMarginResponse, Symbol("msg"), msg)
        OpenAPI.validate_property(PositionMarginResponse, Symbol("type"), type)
        return new(amount, code, msg, type, )
    end
end # type PositionMarginResponse

const _property_types_PositionMarginResponse = Dict{Symbol,String}(Symbol("amount")=>"String", Symbol("code")=>"Int64", Symbol("msg")=>"String", Symbol("type")=>"Int64", )
OpenAPI.property_type(::Type{ PositionMarginResponse }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PositionMarginResponse[name]))}

function check_required(o::PositionMarginResponse)
    true
end

function OpenAPI.validate_property(::Type{ PositionMarginResponse }, name::Symbol, val)




end
