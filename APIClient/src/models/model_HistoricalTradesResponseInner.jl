# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""HistoricalTradesResponse_inner

    HistoricalTradesResponseInner(;
        id=nothing,
        price=nothing,
        qty=nothing,
        quoteQty=nothing,
        time=nothing,
        isBuyerMaker=nothing,
    )

    - id::Int64 : Trade ID
    - price::String : Price
    - qty::String : Quantity
    - quoteQty::String : Quote quantity
    - time::Int64 : Trade executed timestamp
    - isBuyerMaker::Bool : Was the buyer the maker?
"""
Base.@kwdef mutable struct HistoricalTradesResponseInner <: OpenAPI.APIModel
    id::Union{Nothing, Int64} = nothing
    price::Union{Nothing, String} = nothing
    qty::Union{Nothing, String} = nothing
    quoteQty::Union{Nothing, String} = nothing
    time::Union{Nothing, Int64} = nothing
    isBuyerMaker::Union{Nothing, Bool} = nothing

    function HistoricalTradesResponseInner(id, price, qty, quoteQty, time, isBuyerMaker, )
        OpenAPI.validate_property(HistoricalTradesResponseInner, Symbol("id"), id)
        OpenAPI.validate_property(HistoricalTradesResponseInner, Symbol("price"), price)
        OpenAPI.validate_property(HistoricalTradesResponseInner, Symbol("qty"), qty)
        OpenAPI.validate_property(HistoricalTradesResponseInner, Symbol("quoteQty"), quoteQty)
        OpenAPI.validate_property(HistoricalTradesResponseInner, Symbol("time"), time)
        OpenAPI.validate_property(HistoricalTradesResponseInner, Symbol("isBuyerMaker"), isBuyerMaker)
        return new(id, price, qty, quoteQty, time, isBuyerMaker, )
    end
end # type HistoricalTradesResponseInner

const _property_types_HistoricalTradesResponseInner = Dict{Symbol,String}(Symbol("id")=>"Int64", Symbol("price")=>"String", Symbol("qty")=>"String", Symbol("quoteQty")=>"String", Symbol("time")=>"Int64", Symbol("isBuyerMaker")=>"Bool", )
OpenAPI.property_type(::Type{ HistoricalTradesResponseInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_HistoricalTradesResponseInner[name]))}

function check_required(o::HistoricalTradesResponseInner)
    true
end

function OpenAPI.validate_property(::Type{ HistoricalTradesResponseInner }, name::Symbol, val)
    if name === Symbol("id")
        OpenAPI.validate_param(name, "HistoricalTradesResponseInner", :format, val, "int64")
    end
    if name === Symbol("time")
        OpenAPI.validate_param(name, "HistoricalTradesResponseInner", :format, val, "int64")
    end
end
