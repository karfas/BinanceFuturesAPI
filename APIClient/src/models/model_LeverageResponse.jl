# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""LeverageResponse

    LeverageResponse(;
        symbol=nothing,
        leverage=nothing,
        maxNotionalValue=nothing,
    )

    - symbol::String : Trading pair symbol
    - leverage::Int64 : Leverage value
    - maxNotionalValue::String : Maximum notional value
"""
Base.@kwdef mutable struct LeverageResponse <: OpenAPI.APIModel
    symbol::Union{Nothing, String} = nothing
    leverage::Union{Nothing, Int64} = nothing
    maxNotionalValue::Union{Nothing, String} = nothing

    function LeverageResponse(symbol, leverage, maxNotionalValue, )
        OpenAPI.validate_property(LeverageResponse, Symbol("symbol"), symbol)
        OpenAPI.validate_property(LeverageResponse, Symbol("leverage"), leverage)
        OpenAPI.validate_property(LeverageResponse, Symbol("maxNotionalValue"), maxNotionalValue)
        return new(symbol, leverage, maxNotionalValue, )
    end
end # type LeverageResponse

const _property_types_LeverageResponse = Dict{Symbol,String}(Symbol("symbol")=>"String", Symbol("leverage")=>"Int64", Symbol("maxNotionalValue")=>"String", )
OpenAPI.property_type(::Type{ LeverageResponse }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_LeverageResponse[name]))}

function check_required(o::LeverageResponse)
    true
end

function OpenAPI.validate_property(::Type{ LeverageResponse }, name::Symbol, val)



end
