# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""PortfolioMarginAccountResponse_positions_inner

    PortfolioMarginAccountResponsePositionsInner(;
        symbol=nothing,
        positionAmount=nothing,
        entryPrice=nothing,
        markPrice=nothing,
        unRealizedProfit=nothing,
        liquidationPrice=nothing,
        leverage=nothing,
        marginType=nothing,
        isolatedMargin=nothing,
        positionSide=nothing,
    )

    - symbol::String : Trading pair symbol
    - positionAmount::String : Position amount
    - entryPrice::String : Entry price
    - markPrice::String : Mark price
    - unRealizedProfit::String : Unrealized profit
    - liquidationPrice::String : Liquidation price
    - leverage::String : Position leverage
    - marginType::String : Margin type (isolated or cross)
    - isolatedMargin::String : Isolated margin
    - positionSide::String : Position side (BOTH/LONG/SHORT)
"""
Base.@kwdef mutable struct PortfolioMarginAccountResponsePositionsInner <: OpenAPI.APIModel
    symbol::Union{Nothing, String} = nothing
    positionAmount::Union{Nothing, String} = nothing
    entryPrice::Union{Nothing, String} = nothing
    markPrice::Union{Nothing, String} = nothing
    unRealizedProfit::Union{Nothing, String} = nothing
    liquidationPrice::Union{Nothing, String} = nothing
    leverage::Union{Nothing, String} = nothing
    marginType::Union{Nothing, String} = nothing
    isolatedMargin::Union{Nothing, String} = nothing
    positionSide::Union{Nothing, String} = nothing

    function PortfolioMarginAccountResponsePositionsInner(symbol, positionAmount, entryPrice, markPrice, unRealizedProfit, liquidationPrice, leverage, marginType, isolatedMargin, positionSide, )
        OpenAPI.validate_property(PortfolioMarginAccountResponsePositionsInner, Symbol("symbol"), symbol)
        OpenAPI.validate_property(PortfolioMarginAccountResponsePositionsInner, Symbol("positionAmount"), positionAmount)
        OpenAPI.validate_property(PortfolioMarginAccountResponsePositionsInner, Symbol("entryPrice"), entryPrice)
        OpenAPI.validate_property(PortfolioMarginAccountResponsePositionsInner, Symbol("markPrice"), markPrice)
        OpenAPI.validate_property(PortfolioMarginAccountResponsePositionsInner, Symbol("unRealizedProfit"), unRealizedProfit)
        OpenAPI.validate_property(PortfolioMarginAccountResponsePositionsInner, Symbol("liquidationPrice"), liquidationPrice)
        OpenAPI.validate_property(PortfolioMarginAccountResponsePositionsInner, Symbol("leverage"), leverage)
        OpenAPI.validate_property(PortfolioMarginAccountResponsePositionsInner, Symbol("marginType"), marginType)
        OpenAPI.validate_property(PortfolioMarginAccountResponsePositionsInner, Symbol("isolatedMargin"), isolatedMargin)
        OpenAPI.validate_property(PortfolioMarginAccountResponsePositionsInner, Symbol("positionSide"), positionSide)
        return new(symbol, positionAmount, entryPrice, markPrice, unRealizedProfit, liquidationPrice, leverage, marginType, isolatedMargin, positionSide, )
    end
end # type PortfolioMarginAccountResponsePositionsInner

const _property_types_PortfolioMarginAccountResponsePositionsInner = Dict{Symbol,String}(Symbol("symbol")=>"String", Symbol("positionAmount")=>"String", Symbol("entryPrice")=>"String", Symbol("markPrice")=>"String", Symbol("unRealizedProfit")=>"String", Symbol("liquidationPrice")=>"String", Symbol("leverage")=>"String", Symbol("marginType")=>"String", Symbol("isolatedMargin")=>"String", Symbol("positionSide")=>"String", )
OpenAPI.property_type(::Type{ PortfolioMarginAccountResponsePositionsInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PortfolioMarginAccountResponsePositionsInner[name]))}

function check_required(o::PortfolioMarginAccountResponsePositionsInner)
    true
end

function OpenAPI.validate_property(::Type{ PortfolioMarginAccountResponsePositionsInner }, name::Symbol, val)
end
