openapi: 3.0.3
info:
  title: Binance USDs-M Futures API
  description: |
    Binance official supported Postman collections.

    - API documents: https://binance-docs.github.io/apidocs/futures/en/
    - Telegram: https://t.me/binance_api_english
    - Open Issue at: https://github.com/binance-exchange/binance-api-postman

    Converted to OpenAPI 3.0.3 using https://kevinswiber.github.io/postman2openapi/
  version: 1.0.0
  contact: {}
servers:
  - url: 'https://fapi.binance.com'
paths:
  /fapi/v1/ping:
    get:
      tags:
        - Market
      summary: Test Connectivity
      description: |
        Test connectivity to the Rest API.
      operationId: ping
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
  /fapi/v1/time:
    get:
      tags:
        - Market
      summary: Check Server Time
      description: |
        Check Server Time
      operationId: serverTime
      responses:
        '200':
          description: 'Server time in milliseconds'
          content:
            application/json:
              schema:
                type: object
                properties:
                  serverTime:
                    type: integer
                    format: int64
                    description: Current server time in milliseconds
                    example: 1499827319559
                required:
                  - serverTime
  /fapi/v1/exchangeInfo:
    get:
      tags:
        - Market
      summary: Exchange Information
      description: |
        Exchange Information
      operationId: exchangeInfo
      responses:
        '200':
          description: |
            Exchange information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeInfoResponse'
  /fapi/v1/depth:
    get:
      tags:
        - Market
      summary: Order Book
      description: |
        Order Book
      operationId: depth
      parameters:
        - name: symbol
          in: query
          required: true
          description: |
            Trading pair symbol (e.g., BTCUSDT)
          schema:
            type: string
        - name: limit
          in: query
          description: |
            Number of price levels to return.
            Valid values: [5, 10, 20, 50, 100, 500, 1000]
            Default: 100
          schema:
            type: integer
            enum: [5, 10, 20, 50, 100, 500, 1000]
            default: 100
      responses:
        '200':
          description: 'Order book for the specified symbol'
          content:
            application/json:
              schema:
                type: object
                properties:
                  lastUpdateId:
                    type: integer
                    format: int64
                    description: Last update ID of the order book
                  E:
                    type: integer
                    format: int64
                    description: Event time
                  T:
                    type: integer
                    format: int64
                    description: Transaction time
                  bids:
                    type: array
                    description: List of bids [price, quantity]
                    items:
                      type: array
                      minItems: 2
                      maxItems: 2
                      items:
                        type: string
                        description: Price level and quantity as strings
                  asks:
                    type: array
                    description: List of asks [price, quantity]
                    items:
                      type: array
                      minItems: 2
                      maxItems: 2
                      items:
                        type: string
                        description: Price level and quantity as strings
                required:
                  - lastUpdateId
                  - bids
                  - asks
  /fapi/v1/trades:
    get:
      tags:
        - Market
      summary: Recent Trades List
      description: Recent Trades List
      operationId: trades
      parameters:
        - name: symbol
          in: query
          required: true
          description: Trading pair symbol (e.g., BTCUSDT)
          schema:
            type: string
        - name: limit
          in: query
          description: |
            Number of recent trades to return.
            Default: 500
            Max: 1000
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 500
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
  /fapi/v1/historicalTrades:
    get:
      tags:
        - Market
      summary: Old Trades Lookup (MARKET_DATA)
      description: This endpoint need your API key only, not the secret key.
      operationId: historicalTrades
      parameters:
        - name: symbol
          in: query
          required: true
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            default: 500
            maximum: 1000
            description: Default 500; max 1000.
        - name: fromId
          in: query
          schema:
            type: integer
            description: Trade id to fetch from. Default gets most recent trades.
      responses:
        '200':
          description: List of historical trades
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoricalTradesResponse'
  /fapi/v1/aggTrades:
    get:
      tags:
        - Market
      summary: Compressed/Aggregate Trades List
      description: Get compressed, aggregate trades. Trades that fill at the same time, from the same order, with the same price will have the quantity aggregated.
      operationId: aggTrades
      parameters:
        - name: symbol
          in: query
          required: true
          schema:
            type: string
        - name: fromId
          in: query
          schema:
            type: integer
            description: ID to get aggregate trades from INCLUSIVE.
        - name: startTime
          in: query
          schema:
            type: integer
            format: int64
            description: Timestamp in ms to get aggregate trades from INCLUSIVE.
        - name: endTime
          in: query
          schema:
            type: integer
            format: int64
            description: Timestamp in ms to get aggregate trades until INCLUSIVE.
        - name: limit
          in: query
          schema:
            type: integer
            default: 500
            maximum: 1000
            description: Default 500; max 1000.
      responses:
        '200':
          description: List of aggregate trades
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregateTradesResponse'
  /fapi/v1/klines:
    get:
      tags:
        - Market
      summary: Kline/Candlestick Data
      description: >-
        Kline/candlestick bars for a symbol. Klines are uniquely identified by
        their open time.
      operationId: klines
      parameters:
        - name: symbol
          in: query
          required: true
          description: Trading pair symbol (e.g., BTCUSDT)
          schema:
            type: string
        - name: interval
          in: query
          required: true
          description: |
            Kline/candlestick interval:
            - 1m: 1 minute
            - 3m: 3 minutes
            - 5m: 5 minutes
            - 15m: 15 minutes
            - 30m: 30 minutes
            - 1h: 1 hour
            - 2h: 2 hours
            - 4h: 4 hours
            - 6h: 6 hours
            - 8h: 8 hours
            - 12h: 12 hours
            - 1d: 1 day
            - 3d: 3 days
            - 1w: 1 week
            - 1M: 1 month
          schema:
            type: string
            enum: ["1m","3m","5m","15m","30m","1h","2h","4h","6h","8h","12h","1d","3d","1w","1M"]
        - name: startTime
          in: query
          description: Start time in milliseconds. If not sent, returns from earliest available
          schema:
            type: integer
            format: int64
        - name: endTime
          in: query
          description: End time in milliseconds. If not sent, returns until latest available
          schema:
            type: integer
            format: int64
        - name: limit
          in: query
          description: |
            Number of data points to return.
            Default: 500
            Max: 1500
          schema:
            type: integer
            minimum: 1
            maximum: 1500
            default: 500
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KlinesResponse'
  /fapi/v1/continuousKlines:
    get:
      tags:
        - Market
      summary: Continuous Contract Kline/Candlestick Data
      description: >-
        Kline/candlestick bars for a symbol. Klines are uniquely identified by
        their open time.
      operationId: continuousKlines
      parameters:
        - name: pair
          in: query
          schema:
            type: string
            example: ''
        - name: contractType
          in: query
          schema:
            type: string
            example: ''
        - name: interval
          in: query
          schema:
            type: string
            example: ''
        - name: startTime
          in: query
          schema:
            type: string
            example: ''
        - name: endTime
          in: query
          schema:
            type: string
            example: ''
        - name: limit
          in: query
          schema:
            type: string
            example: ''
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KlinesResponse'
  /fapi/v1/indexPriceKlines:
    get:
      tags:
        - Market
      summary: Index Price Kline/Candlestick Data
      description: >-
        Kline/candlestick bars for the index price of a pair. Klines are
        uniquely identified by their open time.
      operationId: indexPriceKlines
      parameters:
        - name: pair
          in: query
          schema:
            type: string
            example: BTCUSDT
        - name: interval
          in: query
          schema:
            type: string
            example: 1h
          description: 1m, 1h, 1d
        - name: startTime
          in: query
          schema:
            type: string
        - name: endTime
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
            example: '500'
          description: Default 500; max 1500.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KlinesResponse'
  /fapi/v1/markPriceKlines:
    get:
      tags:
        - Market
      summary: Mark Price Kline/Candlestick Data
      description: >-
        Kline/candlestick bars for the mark price of a symbol. Klines are
        uniquely identified by their open time.
      operationId: markPriceKlines
      parameters:
        - name: symbol
          in: query
          schema:
            type: string
            example: BTCUSDT
        - name: interval
          in: query
          schema:
            type: string
            example: 1h
          description: 1m, 1h, 1d
        - name: startTime
          in: query
          schema:
            type: string
        - name: endTime
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
            example: '500'
          description: Default 500; max 1500.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KlinesResponse'
  /fapi/v1/premiumIndex:
    get:
      tags:
        - Market
      summary: Mark Price
      description: |
        Mark Price and Funding Rate

        Weight: 1
      operationId: premiumIndex
      parameters:
        - name: symbol
          in: query
          description: |
            Trading pair symbol (e.g., BTCUSDT). If not sent, returns all symbols
          schema:
            type: string
            example: ''
      responses:
        '200':
          description: |
            Premium index information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PremiumIndexResponse'
  /fapi/v1/fundingRate:
    get:
      tags:
        - Market
      summary: Get Funding Rate History
      description: |
        Get funding rate history

        Weight: 1
      operationId: fundingRate
      parameters:
        - name: symbol
          in: query
          description: |
            Trading pair symbol (e.g., BTCUSDT). If not sent, returns all symbols
          schema:
            type: string
            example: BTCUSDT
        - name: startTime
          in: query
          description: |
            Start time in milliseconds. If not sent, returns from earliest available
          schema:
            type: string
        - name: endTime
          in: query
          description: |
            End time in milliseconds. If not sent, returns until latest available
          schema:
            type: string
        - name: limit
          in: query
          description: |
            Number of records to return.
            Default: 100
            Max: 1000
          schema:
            type: string
            example: '100'
      responses:
        '200':
          description: |
            Funding rate history
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FundingRateResponse'
  /fapi/v1/ticker/24hr:
    get:
      tags:
        - Market
      summary: 24hr Ticker Price Change Statistics
      description: |
        24 hour rolling window price change statistics.

        Careful when accessing this with no symbol.

        Weight:

        1 for a single symbol;

        40 when the symbol parameter is omitted
      operationId: ticker24hr
      parameters:
        - name: symbol
          in: query
          description: Trading pair symbol (e.g., BTCUSDT). If not sent, returns all symbols
          schema:
            type: string
            example: ''
        - name: symbols
          in: query
          description: Array of trading pair symbols. Maximum of 100 symbols can be sent in a single request
          schema:
            type: array
            items:
              type: string
            maxItems: 100
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/TickerPriceChangeResponse'
                - $ref: '#/components/schemas/SymbolPriceTickerResponse'
  /fapi/v2/ticker/price:
    get:
      tags:
        - Market
      summary: Symbol Price Ticker V2
      description: Latest price for a symbol or symbols.
      operationId: tickerPrice
      parameters:
        - name: symbol
          in: query
          description: Trading pair symbol (e.g., BTCUSDT). If not sent, returns all symbols
          schema:
            type: string
            example: ''
        - name: symbols
          in: query
          description: Array of trading pair symbols. Maximum of 100 symbols can be sent in a single request
          schema:
            type: array
            items:
              type: string
            maxItems: 100
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SymbolPriceTickerResponse'
  /fapi/v1/ticker/bookTicker:
    get:
      tags:
        - Market
      summary: Symbol Order Book Ticker
      description: Best price/qty on the order book for a symbol or symbols.
      operationId: bookTicker
      parameters:
        - name: symbol
          in: query
          description: Trading pair symbol (e.g., BTCUSDT). If not sent, returns all symbols
          schema:
            type: string
            example: ''
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/BookTickerResponseA'
                  - $ref: '#/components/schemas/BookTickerResponseO'

  /fapi/v1/openInterest:
    get:
      tags:
        - Market
      summary: Open Interest
      description: Get present open interest of a specific symbol.
      operationId: openInterest
      parameters:
        - name: symbol
          in: query
          schema:
            type: string
            example: BTCUSDT
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
  /futures/data/openInterestHist:
    get:
      tags:
        - Market
      summary: Open Interest Statistics
      description: Get present open interest of a specific symbol.
      operationId: openInterestHist
      parameters:
        - name: symbol
          in: query
          schema:
            type: string
            example: BTCUSDT
        - name: period
          in: query
          schema:
            type: string
            example: ''
          description: '"5m","15m","30m","1h","2h","4h","6h","12h","1d"'
        - name: limit
          in: query
          schema:
            type: string
            example: '30'
        - name: startTime
          in: query
          schema:
            type: string
            example: ''
        - name: endTime
          in: query
          schema:
            type: string
            example: ''
        - name: x-mbx-apikey
          in: header
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
  /fapi/v1/topLongShortAccountRatio:
    get:
      tags:
        - Market
      summary: Top Trader Long/Short Ratio (Accounts)
      description: Get present open interest of a specific symbol.
      operationId: topLongShortAccountRatio
      parameters:
        - name: symbol
          in: query
          schema:
            type: string
            example: BTCUSDT
        - name: period
          in: query
          schema:
            type: string
            example: ''
          description: '"5m","15m","30m","1h","2h","4h","6h","12h","1d"'
        - name: limit
          in: query
          schema:
            type: string
            example: '30'
        - name: startTime
          in: query
          schema:
            type: string
            example: ''
        - name: endTime
          in: query
          schema:
            type: string
            example: ''
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
  /fapi/v1/topLongShortPositionRatio:
    get:
      tags:
        - Market
      summary: Top Trader Long/Short Ratio (Positions)
      description: Get present open interest of a specific symbol.
      operationId: topLongShortPositionRatio
      parameters:
        - name: symbol
          in: query
          schema:
            type: string
            example: BTCUSDT
        - name: period
          in: query
          schema:
            type: string
            example: ''
          description: '"5m","15m","30m","1h","2h","4h","6h","12h","1d"'
        - name: limit
          in: query
          schema:
            type: string
            example: '30'
        - name: startTime
          in: query
          schema:
            type: string
            example: ''
        - name: endTime
          in: query
          schema:
            type: string
            example: ''
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
  /fapi/v1/globalLongShortAccountRatio:
    get:
      tags:
        - Market
      summary: Long/Short Ratio
      description: Get present open interest of a specific symbol.
      operationId: globalLongShortAccountRatio
      parameters:
        - name: symbol
          in: query
          schema:
            type: string
            example: BTCUSDT
        - name: period
          in: query
          schema:
            type: string
            example: ''
          description: '"5m","15m","30m","1h","2h","4h","6h","12h","1d"'
        - name: limit
          in: query
          schema:
            type: string
            example: '30'
        - name: startTime
          in: query
          schema:
            type: string
            example: ''
        - name: endTime
          in: query
          schema:
            type: string
            example: ''
        - name: x-mbx-apikey
          in: header
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
  /fapi/v1/takerlongshortRatio:
    get:
      tags:
        - Market
      summary: Taker Buy/Sell Volume
      description: Taker Buy/Sell Volume
      operationId: takerLongShortRatio
      parameters:
        - name: symbol
          in: query
          schema:
            type: string
            example: BTCUSDT
        - name: period
          in: query
          schema:
            type: string
            example: 5m
          description: '"5m","15m","30m","1h","2h","4h","6h","12h","1d"'
        - name: limit
          in: query
          schema:
            type: string
            example: '30'
          description: default 30, max 500
        - name: startTime
          in: query
          schema:
            type: string
            example: ''
        - name: endTime
          in: query
          schema:
            type: string
            example: ''
        - name: x-mbx-apikey
          in: header
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
  /fapi/v1/lvtKlines:
    get:
      tags:
        - Market
      summary: Historical BLVT NAV Kline/Candlestick
      description: Historical BLVT NAV Kline/Candlestick
      operationId: lvtKlines
      parameters:
        - name: symbol
          in: query
          schema:
            type: string
            example: ''
          description: token name
        - name: interval
          in: query
          schema:
            type: string
            example: ''
        - name: startTime
          in: query
          schema:
            type: string
            example: ''
        - name: endTime
          in: query
          schema:
            type: string
            example: ''
        - name: limit
          in: query
          schema:
            type: string
            example: ''
          description: default 500, max 1000
        - name: x-mbx-apikey
          in: header
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KlinesResponse'
  /fapi/v1/indexInfo:
    get:
      tags:
        - Market
      summary: Composite Index Symbol Information
      description: Composite Index Symbol Information
      operationId: indexInfo
      parameters:
        - name: symbol
          in: query
          schema:
            type: string
            example: ''
          description: token name
        - name: x-mbx-apikey
          in: header
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
  /fapi/v1/assetIndex:
    get:
      tags:
        - Market
      summary: Multi-Assets Mode Asset Index
      description: Multi-Assets Mode Asset Index
      operationId: assetIndex
      parameters:
        - name: symbol
          in: query
          schema:
            type: string
            example: ''
          description: Asset pair
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
  /fapi/v1/constituents:
    get:
      tags:
        - Market
      summary: Query Index Price Constituents
      description: Query Index Price Constituents
      operationId: constituents
      parameters:
        - name: symbol
          in: query
          schema:
            type: string
        - name: pair
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
  /fapi/v1/basis:
    get:
      tags:
        - Market
      summary: Basis
      description: Basis
      operationId: basis
      parameters:
        - name: pair
          in: query
          schema:
            type: string
            example: ''
        - name: contractType
          in: query
          schema:
            type: string
            example: ''
        - name: period
          in: query
          schema:
            type: string
            example: ''
        - name: limit
          in: query
          schema:
            type: string
            example: ''
        - name: startTime
          in: query
          schema:
            type: string
            example: ''
        - name: endTime
          in: query
          schema:
            type: string
            example: ''
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
  /fapi/v3/account:
    get:
      tags:
        - Account
      summary: Account information
      description: Account information
      operationId: account
      parameters:
        - name: recvWindow
          in: query
          description: |
            The value cannot be greater than 60000.
            Defines how long an order request is valid for in milliseconds.
            Default: 5000
          schema:
            type: integer
            maximum: 60000
            default: 5000
        - name: timestamp
          in: query
          description: Current timestamp in milliseconds
          schema:
            type: integer
            format: int64
        - name: signature
          in: query
          schema:
            type: string
            example: '{{signature}}'
        - name: x-mbx-apikey
          in: header
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  feeTier:
                    type: integer
                    description: "Fee tier"
                  canTrade:
                    type: boolean
                    description: "Can trade"
                  canDeposit:
                    type: boolean
                    description: "Can deposit"
                  canWithdraw:
                    type: boolean
                    description: "Can withdraw"
                  updateTime:
                    type: integer
                    description: "Update time"
                  totalInitialMargin:
                    type: string
                    description: "Total initial margin"
                  totalMaintMargin:
                    type: string
                    description: "Total maintenance margin"
                  totalWalletBalance:
                    type: string
                    description: "Total wallet balance"
                  totalUnrealizedProfit:
                    type: string
                    description: "Total unrealized profit"
                  totalMarginBalance:
                    type: string
                    description: "Total margin balance"
                  totalPositionInitialMargin:
                    type: string
                    description: "Total position initial margin"
                  totalOpenOrderInitialMargin:
                    type: string
                    description: "Total open order initial margin"
                  totalCrossWalletBalance:
                    type: string
                    description: "Total cross wallet balance"
                  totalCrossUnPnl:
                    type: string
                    description: "Total cross unrealized PnL"
                  availableBalance:
                    type: string
                    description: "Available balance"
                  maxWithdrawAmount:
                    type: string
                    description: "Maximum withdraw amount"
                  assets:
                    type: array
                    description: "Assets information"
                    items:
                      type: object
                      properties:
                        asset:
                          type: string
                          description: "Asset name"
                        walletBalance:
                          type: string
                          description: "Wallet balance"
                        unrealizedProfit:
                          type: string
                          description: "Unrealized profit"
                        marginBalance:
                          type: string
                          description: "Margin balance"
                        maintMargin:
                          type: string
                          description: "Maintenance margin"
                        initialMargin:
                          type: string
                          description: "Initial margin"
                        positionInitialMargin:
                          type: string
                          description: "Position initial margin"
                        openOrderInitialMargin:
                          type: string
                          description: "Open order initial margin"
                        crossWalletBalance:
                          type: string
                          description: "Cross wallet balance"
                        crossUnPnl:
                          type: string
                          description: "Cross unrealized PnL"
                        availableBalance:
                          type: string
                          description: "Available balance"
                        maxWithdrawAmount:
                          type: string
                          description: "Maximum withdraw amount"
                  positions:
                    type: array
                    description: "Positions"
                    items:
                      type: object
                      properties:
                        symbol:
                          type: string
                          description: "Trading pair"
                        initialMargin:
                          type: string
                          description: "Initial margin"
                        maintMargin:
                          type: string
                          description: "Maintenance margin"
                        unrealizedProfit:
                          type: string
                          description: "Unrealized profit"
                        positionInitialMargin:
                          type: string
                          description: "Position initial margin"
                        openOrderInitialMargin:
                          type: string
                          description: "Open order initial margin"
                        leverage:
                          type: string
                          description: "Leverage"
                        isolated:
                          type: boolean
                          description: "Is isolated"
                        entryPrice:
                          type: string
                          description: "Entry price"
                        maxNotional:
                          type: string
                          description: "Maximum notional"
                        positionSide:
                          type: string
                          description: "Position side"
                        positionAmt:
                          type: string
                          description: "Position amount"
                        notional:
                          type: string
                          description: "Notional value"
                        isolatedWallet:
                          type: string
                          description: "Isolated wallet"
                        updateTime:
                          type: integer
                          description: "Update time"
                additionalProperties: true
  /fapi/v1/income:
    get:
      tags:
        - Account
      summary: Get Income History
      description: Get income history from futures account
      operationId: income
      parameters:
        - name: symbol
          in: query
          description: Trading pair
          required: false
          schema:
            type: string
        - name: incomeType
          in: query
          description: Income type
          required: false
          schema:
            type: string
            enum:
              - TRANSFER
              - WELCOME_BONUS
              - REALIZED_PNL
              - FUNDING_FEE
              - COMMISSION
              - INSURANCE_CLEAR
              - REFERRAL_KICKBACK
              - COMMISSION_REBATE
              - API_REBATE
              - CONTEST_REWARD
              - CROSS_COLLATERAL_TRANSFER
              - OPTIONS_PREMIUM_FEE
              - OPTIONS_SETTLE_PROFIT
              - INTERNAL_TRANSFER
              - AUTO_EXCHANGE
              - DELIVERED_SETTELMENT
              - COIN_SWAP_DEPOSIT
              - COIN_SWAP_WITHDRAW
              - POSITION_LIMIT_INCREASE_FEE
        - name: startTime
          in: query
          description: Start time in ms
          required: false
          schema:
            type: integer
            format: int64
        - name: endTime
          in: query
          description: End time in ms
          required: false
          schema:
            type: integer
            format: int64
        - name: limit
          in: query
          description: Default 100; max 1000
          required: false
          schema:
            type: integer
            default: 100
            maximum: 1000
        - name: recvWindow
          in: query
          description: The value cannot be greater than 60000
          required: false
          schema:
            type: integer
            format: int64
            maximum: 60000
            default: 5000
        - name: timestamp
          in: query
          description: Current timestamp in milliseconds
          schema:
            type: integer
            format: int64
        - name: signature
          in: query
          description: Signature
          schema:
            type: string
        - name: x-mbx-apikey
          in: header
          description: API Key
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: 'Income History'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    symbol:
                      type: string
                      description: "Trading pair"
                    incomeType:
                      type: string
                      description: "Income type"
                      enum:
                        - TRANSFER
                        - WELCOME_BONUS
                        - REALIZED_PNL
                        - FUNDING_FEE
                        - COMMISSION
                        - INSURANCE_CLEAR
                        - REFERRAL_KICKBACK
                        - COMMISSION_REBATE
                        - API_REBATE
                        - CONTEST_REWARD
                        - CROSS_COLLATERAL_TRANSFER
                        - OPTIONS_PREMIUM_FEE
                        - OPTIONS_SETTLE_PROFIT
                        - INTERNAL_TRANSFER
                        - AUTO_EXCHANGE
                        - DELIVERED_SETTELMENT
                        - COIN_SWAP_DEPOSIT
                        - COIN_SWAP_WITHDRAW
                        - POSITION_LIMIT_INCREASE_FEE
                    income:
                      type: string
                      description: "Income amount"
                    asset:
                      type: string
                      description: "Asset name"
                    info:
                      type: string
                      description: "Additional information"
                    time:
                      type: integer
                      format: int64
                      description: "Transaction time in ms"
                    tranId:
                      type: string
                      description: "Transaction ID"
                    tradeId:
                      type: string
                      description: "Trade ID if the income is from a trade"
                  additionalProperties: true
  /fapi/v3/positionRisk:
    get:
      tags:
        - Account
      summary: Position Risk
      description: Get Position Risk of all symbols
      operationId: position_risk
      parameters:
        - name: recvWindow
          in: query
          description: The value cannot be greater than 60000
          required: false
          schema:
            type: integer
            format: int64
            maximum: 60000
            default: 5000
        - name: timestamp
          in: query
          description: Current timestamp in milliseconds
          schema:
            type: integer
            format: int64
        - name: signature
          in: query
          description: Signature
          schema:
            type: string
        - name: x-mbx-apikey
          in: header
          description: API Key
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: 'Position Risk Information'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    symbol:
                      type: string
                      description: "Trading pair"
                    positionAmt:
                      type: string
                      description: "Position amount"
                    entryPrice:
                      type: string
                      description: "Entry price"
                    markPrice:
                      type: string
                      description: "Mark price"
                    unRealizedProfit:
                      type: string
                      description: "Unrealized profit"
                    liquidationPrice:
                      type: string
                      description: "Liquidation price"
                    leverage:
                      type: string
                      description: "Leverage"
                    maxNotionalValue:
                      type: string
                      description: "Maximum notional value"
                    marginType:
                      type: string
                      description: "Margin type (isolated or cross)"
                    isolatedMargin:
                      type: string
                      description: "Isolated margin"
                    isAutoAddMargin:
                      type: boolean
                      description: "Is auto add margin"
                    positionSide:
                      type: string
                      description: "Position side (BOTH, LONG or SHORT)"
                    notional:
                      type: string
                      description: "Notional value"
                    isolatedWallet:
                      type: string
                      description: "Isolated wallet amount"
                    updateTime:
                      type: integer
                      format: int64
                      description: "Update time in milliseconds"
                  additionalProperties: true
  /fapi/v1/userTrades:
    get:
      tags:
        - Account
      summary: Account Trade List
      description: Account Trade List
      operationId: userTrades
      parameters:
        - name: symbol
          in: query
          schema:
            type: string
            example: BTCUSDT
        - name: startTime
          in: query
          schema:
            type: string
            example: ''
        - name: endTime
          in: query
          schema:
            type: string
            example: ''
        - name: fromId
          in: query
          schema:
            type: string
            example: ''
        - name: limit
          in: query
          schema:
            type: string
            example: '500'
        - name: recvWindow
          in: query
          schema:
            type: string
            example: '5000'
          description: The value cannot be greater than 60000
        - name: timestamp
          in: query
          schema:
            type: string
            example: '{{timestamp}}'
        - name: signature
          in: query
          schema:
            type: string
            example: '{{signature}}'
        - name: x-mbx-apikey
          in: header
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
  /fapi/v3/balance:
    get:
      tags:
        - Account
      summary: Future Account Balance
      description: Get Future Account Balance
      operationId: balance
      parameters:
        - name: recvWindow
          in: query
          description: The value cannot be greater than 60000
          required: false
          schema:
            type: integer
            format: int64
            maximum: 60000
            default: 5000
        - name: timestamp
          in: query
          description: Current timestamp in milliseconds
          schema:
            type: integer
            format: int64
        - name: signature
          description: Signature
          in: query
          schema:
            type: string
        - name: x-mbx-apikey
          in: header
          description: API Key
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: 'Future Account Balance'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    accountAlias:
                      type: string
                      description: "Unique account code"
                    asset:
                      type: string
                      description: "Asset name"
                    balance:
                      type: string
                      description: "Wallet balance"
                    crossWalletBalance:
                      type: string
                      description: "Cross wallet balance"
                    crossUnPnl:
                      type: string
                      description: "Unrealized profit/loss of crossed positions"
                    availableBalance:
                      type: string
                      description: "Available balance = walletBalance - marginBalance"
                    maxWithdrawAmount:
                      type: string
                      description: "Maximum amount for transfer out"
                    marginAvailable:
                      type: boolean
                      description: "Whether the asset can be used as margin in Multi-Assets mode"
                    updateTime:
                      type: integer
                      format: int64
                      description: "Update time in milliseconds"
                  additionalProperties: true
  /fapi/v1/leverageBracket:
    get:
      tags:
        - Account
      summary: Notional and Leverage Brackets
      description: Get notional and leverage brackets
      operationId: leverage_bracket
      parameters:
        - name: symbol
          in: query
          description: Trading pair
          required: false
          schema:
            type: string
        - name: recvWindow
          in: query
          description: The value cannot be greater than 60000
          required: false
          schema:
            type: integer
            format: int64
            maximum: 60000
            default: 5000
        - name: timestamp
          in: query
          description: Current timestamp in milliseconds
          schema:
            type: integer
            format: int64
        - name: signature
          in: query
          description: Signature
          schema:
            type: string
        - name: x-mbx-apikey
          in: header
          description: API Key
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: 'Notional and Leverage Brackets'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    symbol:
                      type: string
                      description: "Trading pair"
                    brackets:
                      type: array
                      description: "Bracket information"
                      items:
                        type: object
                        properties:
                          bracket:
                            type: integer
                            description: "Bracket number"
                          initialLeverage:
                            type: integer
                            description: "Max initial leverage for this bracket"
                          notionalCap:
                            type: string
                            description: "Cap notional of this bracket"
                          notionalFloor:
                            type: string
                            description: "Floor notional of this bracket"
                          maintMarginRatio:
                            type: string
                            description: "Maintenance margin ratio for this bracket"
                          cum:
                            type: string
                            description: "Auxiliary number for quick calculation"
                  additionalProperties: true
  /fapi/v1/adlQuantile:
    get:
      tags:
        - Account
      summary: Position ADL Quantile Estimation (USER_DATA)
      description: Position ADL Quantile Estimation (USER_DATA)
      operationId: adlQuantile
      parameters:
        - name: symbol
          in: query
          schema:
            type: string
            example: ''
        - name: recvWindow
          in: query
          schema:
            type: string
            example: '5000'
          description: The value cannot be greater than 60000
        - name: timestamp
          in: query
          schema:
            type: string
            example: '{{timestamp}}'
        - name: signature
          in: query
          schema:
            type: string
            example: '{{signature}}'
        - name: x-mbx-apikey
          in: header
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
  /fapi/v1/commissionRate:
    get:
      tags:
        - Account
      summary: User Commission Rate (USER_DATA)
      description: User Commission Rate (USER_DATA)
      operationId: commissionRate
      parameters:
        - name: symbol
          in: query
          schema:
            type: string
            example: ''
        - name: recvWindow
          in: query
          schema:
            type: string
            example: '5000'
          description: The value cannot be greater than 60000
        - name: timestamp
          in: query
          schema:
            type: string
            example: '{{timestamp}}'
        - name: signature
          in: query
          schema:
            type: string
            example: '{{signature}}'
        - name: x-mbx-apikey
          in: header
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
  /fapi/v1/multiAssetsMargin:
    get:
      tags:
        - Trade
      summary: Get Current Multi-Assets Mode
      description: Get Current Multi-Assets Mode
      operationId: multiAssetsMargin
      parameters:
        - name: recvWindow
          in: query
          schema:
            type: string
            example: ''
        - name: timestamp
          in: query
          schema:
            type: string
            example: '{{timestamp}}'
        - name: signature
          in: query
          schema:
            type: string
            example: '{{signature}}'
        - name: x-mbx-apikey
          in: header
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiAssetsMarginResponse'
    post:
      tags:
        - Trade
      summary: Change Multi-Assets Mode
      description: Change Multi-Assets Mode
      operationId: postMultiAssetsMargin
      parameters:
        - name: multiAssetsMargin
          in: query
          required: true
          schema:
            type: boolean
        - name: recvWindow
          in: query
          schema:
            type: integer
            example: '5000'
        - name: timestamp
          in: query
          schema:
            type: integer
            example: '{{timestamp}}'
        - name: signature
          in: query
          schema:
            type: string
            example: '{{signature}}'
        - name: x-mbx-apikey
          in: header
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
  /fapi/v1/order:
    get:
      tags:
        - Order
      summary: Query Order
      description: Query Order
      operationId: getOrder
      parameters:
        - name: symbol
          in: query
          schema:
            type: string
            example: BTCUSDT
        - name: orderId
          in: query
          schema:
            type: string
            example: ''
        - name: origClientOrderId
          in: query
          schema:
            type: string
        - name: recvWindow
          in: query
          schema:
            type: string
            example: '5000'
          description: The value cannot be greater than 60000
        - name: timestamp
          in: query
          schema:
            type: string
            example: '{{timestamp}}'
        - name: signature
          in: query
          schema:
            type: string
            example: '{{signature}}'
        - name: x-mbx-apikey
          in: header
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
    put:
      tags:
        - Order
      summary: Modify Order (TRADE)
      description: >-
        Either orderId or origClientOrderId must be sent, and the orderId will
        prevail if both are sent.

        Both quantity and price must be sent, which is different from dapi
        modify order endpoint.

        When the new quantity or price doesn't satisfy PRICE_FILTER /
        PERCENT_FILTER / LOT_SIZE, amendment will be rejected and the order will
        stay as it is.

        However the order will be cancelled by the amendment in the following
        situations:

        - when the order is in partially filled status and the new quantity <=
        executedQty

        - When the order is GTX and the new price will cause it to be executed
        immediately

        One order can only be modfied for less than 10000 times


        Weight: 1
      operationId: putOrder
      parameters:
        - name: orderId
          in: query
          schema:
            type: string
            example: ''
        - name: origClientOrderId
          in: query
          schema:
            type: string
            example: ''
        - name: symbol
          in: query
          schema:
            type: string
            example: ''
        - name: side
          in: query
          schema:
            type: string
            example: ''
        - name: quantity
          in: query
          schema:
            type: string
            example: ''
        - name: price
          in: query
          schema:
            type: string
            example: ''
        - name: recvWindow
          in: query
          schema:
            type: string
            example: '5000'
          description: The value cannot be greater than 60000
        - name: timestamp
          in: query
          schema:
            type: string
            example: '{{timestamp}}'
        - name: signature
          in: query
          schema:
            type: string
            example: '{{signature}}'
        - name: x-mbx-apikey
          in: header
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
    post:
      tags:
        - Order
      summary: New Order (TRADE)
      description: https://binance-docs.github.io/apidocs/futures/en/#new-order-trade
      operationId: postOrder
      parameters:
        - name: symbol
          in: query
          schema:
            type: string
            example: ''
        - name: side
          in: query
          schema:
            type: string
            example: ''
        - name: positionSide
          in: query
          schema:
            type: string
            example: ''
          description: |-
            Default BOTH for One-way Mode ;
            LONG or SHORT for Hedge Mode. It must be sent with Hedge Mode.
        - name: type
          in: query
          schema:
            type: string
            example: ''
        - name: timeInForce
          in: query
          schema:
            type: string
            example: ''
        - name: quantity
          in: query
          schema:
            type: string
            example: ''
        - name: reduceOnly
          in: query
          schema:
            type: string
            example: ''
        - name: price
          in: query
          schema:
            type: string
            example: ''
        - name: newClientOrderId
          in: query
          schema:
            type: string
            example: ''
        - name: stopPrice
          in: query
          schema:
            type: string
            example: ''
        - name: closePosition
          in: query
          schema:
            type: string
            example: ''
          description: true, false；Close-All，used with STOP_MARKET or TAKE_PROFIT_MARKET.
        - name: activationPrice
          in: query
          schema:
            type: string
            example: ''
        - name: callbackRate
          in: query
          schema:
            type: string
            example: ''
          description: Used with TRAILING_STOP_MARKET orders, min 0.1, max 5 where 1 for 1%
        - name: workingType
          in: query
          schema:
            type: string
            example: CONTRACT_PRICE
          description: >-
            stopPrice triggered by: "MARK_PRICE", "CONTRACT_PRICE". Default
            "CONTRACT_PRICE"
        - name: priceProtect
          in: query
          schema:
            type: string
            example: ''
          description: '"ACK", "RESULT", default "ACK"'
        - name: newOrderRespType
          in: query
          schema:
            type: string
            example: ''
          description: The value cannot be greater than 60000
        - name: priceMatch
          in: query
          schema:
            type: string
            example: ''
        - name: selfTradePreventionMode
          in: query
          schema:
            type: string
            example: ''
        - name: goodTillDate
          in: query
          schema:
            type: string
            example: ''
        - name: recvWindow
          in: query
          schema:
            type: string
            example: '5000'
          description: The value cannot be greater than 60000
        - name: timestamp
          in: query
          schema:
            type: string
            example: '{{timestamp}}'
        - name: signature
          in: query
          schema:
            type: string
            example: '{{signature}}'
        - name: x-mbx-apikey
          in: header
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
    delete:
      tags:
        - Order
      summary: Cancel Order
      description: Cancel Order
      operationId: deleteOrder
      parameters:
        - name: symbol
          in: query
          schema:
            type: string
            example: BTCUSDT
        - name: orderId
          in: query
          schema:
            type: string
            example: '1192355366'
        - name: origClientOrderId
          in: query
          schema:
            type: string
        - name: recvWindow
          in: query
          schema:
            type: string
            example: '5000'
          description: The value cannot be greater than 60000
        - name: timestamp
          in: query
          schema:
            type: string
            example: '{{timestamp}}'
        - name: signature
          in: query
          schema:
            type: string
            example: '{{signature}}'
        - name: x-mbx-apikey
          in: header
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
  /fapi/v1/batchOrders:
    put:
      tags:
        - Order
      summary: Modify Multiple Orders (TRADE)
      description: Modify Multiple Orders (TRADE)
      operationId: putBatchOrders
      parameters:
        - name: batchOrders
          in: query
          schema:
            type: string
            example: ''
          description: order list. Max 5 orders
        - name: recvWindow
          in: query
          schema:
            type: string
            example: '5000'
          description: The value cannot be greater than 60000
        - name: timestamp
          in: query
          schema:
            type: string
            example: '{{timestamp}}'
        - name: signature
          in: query
          schema:
            type: string
            example: '{{signature}}'
          description: |-
            Default BOTH for One-way Mode ;
            LONG or SHORT for Hedge Mode. It must be sent with Hedge Mode.
        - name: x-mbx-apikey
          in: header
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchOrdersResponse'
    post:
      tags:
        - Order
      summary: Place Multiple Orders (TRADE)
      description: Place Multiple Orders (TRADE)
      operationId: postBatchOrders
      parameters:
        - name: batchOrders
          in: query
          schema:
            type: string
            example: ''
        - name: recvWindow
          in: query
          schema:
            type: string
            example: '5000'
          description: The value cannot be greater than 60000
        - name: timestamp
          in: query
          schema:
            type: string
            example: '{{timestamp}}'
        - name: signature
          in: query
          schema:
            type: string
            example: '{{signature}}'
          description: |-
            Default BOTH for One-way Mode ;
            LONG or SHORT for Hedge Mode. It must be sent with Hedge Mode.
        - name: x-mbx-apikey
          in: header
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchOrdersResponse'
    delete:
      tags:
        - Order
      summary: Cancel Multiple Orders (TRADE)
      description: Cancel Multiple Orders (TRADE)
      operationId: deleteBatchOrders
      parameters:
        - name: symbol
          in: query
          schema:
            type: string
            example: BTCUSDT
        - name: orderIdList
          in: query
          schema:
            type: string
            example: '[1221114054,1229719329]'
          description: '[id,id]  no space in between'
        - name: origClientOrderIdList
          in: query
          schema:
            type: string
            example: '[IKDQAMirf7vElig8hTZHh0,HwJSQKA7drF37tqqAN6q6q]'
        - name: recvWindow
          in: query
          schema:
            type: string
            example: '5000'
          description: The value cannot be greater than 60000
        - name: timestamp
          in: query
          schema:
            type: string
            example: '{{timestamp}}'
        - name: signature
          in: query
          schema:
            type: string
            example: '{{signature}}'
        - name: x-mbx-apikey
          in: header
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchOrdersResponse'
  /fapi/v1/orderAmendment:
    get:
      tags:
        - Order
      summary: Get Order Modify History (USER_DATA)
      description: >-
        Get order modification history

        Either orderId or origClientOrderId must be sent, and the orderId will
        prevail if both are sent.


        Weight: 1
      operationId: getOrderAmendment
      parameters:
        - name: symbol
          in: query
          schema:
            type: string
            example: ''
        - name: orderId
          in: query
          schema:
            type: string
            example: ''
        - name: origClientOrderId
          in: query
          schema:
            type: string
            example: ''
        - name: startTime
          in: query
          schema:
            type: string
            example: ''
          description: Timestamp in ms to get modification history from INCLUSIVE
        - name: endTime
          in: query
          schema:
            type: string
            example: ''
          description: Timestamp in ms to get modification history from INCLUSIVE
        - name: limit
          in: query
          schema:
            type: string
            example: ''
          description: Default 50; max 100
        - name: recvWindow
          in: query
          schema:
            type: string
            example: '5000'
          description: The value cannot be greater than 60000
        - name: timestamp
          in: query
          schema:
            type: string
            example: '{{timestamp}}'
        - name: signature
          in: query
          schema:
            type: string
            example: '{{signature}}'
          description: |-
            Default BOTH for One-way Mode ;
            LONG or SHORT for Hedge Mode. It must be sent with Hedge Mode.
        - name: x-mbx-apikey
          in: header
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderAmendmentHistoryResponse'
  /fapi/v1/order/asyn:
    get:
      tags:
        - Order
      summary: Get Download Id For Futures Order History (USER_DATA)
      description: >-
        Request Limitation is 10 times per month, shared by front end download
        page and rest api

        The time between startTime and endTime can not be longer than 1 year

        Weight: 5
      operationId: getOrderDownloadId
      parameters:
        - name: startTime
          in: query
          schema:
            type: string
            example: ''
          description: Timestamp in ms
        - name: endTime
          in: query
          schema:
            type: string
            example: ''
          description: Timestamp in ms
        - name: recvWindow
          in: query
          schema:
            type: string
            example: '5000'
          description: The value cannot be greater than 60000
        - name: timestamp
          in: query
          schema:
            type: string
            example: '{{timestamp}}'
        - name: signature
          in: query
          schema:
            type: string
            example: '{{signature}}'
          description: |-
            Default BOTH for One-way Mode ;
            LONG or SHORT for Hedge Mode. It must be sent with Hedge Mode.
        - name: x-mbx-apikey
          in: header
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
  /fapi/v1/order/asyn/id:
    get:
      tags:
        - Order
      summary: Get Futures Order History Download Link by Id (USER_DATA)
      description: |-
        Download link expiration: 24h
        Weight: 5
      operationId: getOrderDownloadLinkId
      parameters:
        - name: downloadId
          in: query
          schema:
            type: string
            example: ''
          description: get by download id api
        - name: recvWindow
          in: query
          schema:
            type: string
            example: '5000'
          description: The value cannot be greater than 60000
        - name: timestamp
          in: query
          schema:
            type: string
            example: '{{timestamp}}'
        - name: signature
          in: query
          schema:
            type: string
            example: '{{signature}}'
          description: |-
            Default BOTH for One-way Mode ;
            LONG or SHORT for Hedge Mode. It must be sent with Hedge Mode.
        - name: x-mbx-apikey
          in: header
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
  /fapi/v1/trade/asyn:
    get:
      tags:
        - Order
      summary: Get Download Id For Futures Trade History (USER_DATA)
      description: >-
        Request Limitation is 5 times per month, shared by front end download
        page and rest api

        The time between startTime and endTime can not be longer than 1 year

        Weight: 5
      operationId: getTradeDownloadId
      parameters:
        - name: startTime
          in: query
          schema:
            type: string
            example: ''
          description: Timestamp in ms
        - name: endTime
          in: query
          schema:
            type: string
            example: ''
          description: Timestamp in ms
        - name: recvWindow
          in: query
          schema:
            type: string
            example: '5000'
          description: The value cannot be greater than 60000
        - name: timestamp
          in: query
          schema:
            type: string
            example: '{{timestamp}}'
        - name: signature
          in: query
          schema:
            type: string
            example: '{{signature}}'
          description: |-
            Default BOTH for One-way Mode ;
            LONG or SHORT for Hedge Mode. It must be sent with Hedge Mode.
        - name: x-mbx-apikey
          in: header
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
  /fapi/v1/trade/asyn/id:
    get:
      tags:
        - Order
      summary: Get Futures Trade Download Link by Id (USER_DATA)
      description: |-
        Download link expiration: 24h
        Weight: 5
      operationId: getTradeDownloadLinkId
      parameters:
        - name: downloadId
          in: query
          schema:
            type: string
            example: ''
          description: Timestamp in ms
        - name: recvWindow
          in: query
          schema:
            type: string
            example: '5000'
          description: The value cannot be greater than 60000
        - name: timestamp
          in: query
          schema:
            type: string
            example: '{{timestamp}}'
        - name: signature
          in: query
          schema:
            type: string
            example: '{{signature}}'
          description: |-
            Default BOTH for One-way Mode ;
            LONG or SHORT for Hedge Mode. It must be sent with Hedge Mode.
        - name: x-mbx-apikey
          in: header
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
  /fapi/v1/allOpenOrders:
    delete:
      tags:
        - Order
      summary: Cancel All Open Orders
      description: Cancel All Open Orders
      operationId: deleteAllOpenOrders
      parameters:
        - name: symbol
          in: query
          schema:
            type: string
            example: BTCUSDT
        - name: recvWindow
          in: query
          schema:
            type: string
            example: '5000'
          description: The value cannot be greater than 60000
        - name: timestamp
          in: query
          schema:
            type: string
            example: '{{timestamp}}'
        - name: signature
          in: query
          schema:
            type: string
            example: '{{signature}}'
        - name: x-mbx-apikey
          in: header
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
  /fapi/v1/openOrders:
    get:
      tags:
        - Order
      summary: Current All Open Orders (USER_DATA)
      description: Current All Open Orders (USER_DATA)
      operationId: getOpenOrders
      parameters:
        - name: symbol
          in: query
          schema:
            type: string
            example: BTCUSDT
        - name: recvWindow
          in: query
          schema:
            type: string
            example: '5000'
          description: The value cannot be greater than 60000
        - name: timestamp
          in: query
          schema:
            type: string
            example: '{{timestamp}}'
        - name: signature
          in: query
          schema:
            type: string
            example: '{{signature}}'
        - name: x-mbx-apikey
          in: header
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenOrdersResponse'
  /fapi/v1/openOrder:
    get:
      tags:
        - Order
      summary: Query Current Open Order (USER_DATA)
      description: Query Current Open Order (USER_DATA)
      operationId: getOpenOrder
      parameters:
        - name: symbol
          in: query
          schema:
            type: string
            example: ''
        - name: orderId
          in: query
          schema:
            type: string
            example: ''
        - name: origClientOrderId
          in: query
          schema:
            type: string
        - name: recvWindow
          in: query
          schema:
            type: string
            example: '5000'
          description: The value cannot be greater than 60000
        - name: timestamp
          in: query
          schema:
            type: string
            example: '{{timestamp}}'
        - name: signature
          in: query
          schema:
            type: string
            example: '{{signature}}'
        - name: x-mbx-apikey
          in: header
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
  /fapi/v1/allOrders:
    get:
      tags:
        - Order
      summary: All Orders
      description: All Orders
      operationId: getAllOrders
      parameters:
        - name: symbol
          in: query
          schema:
            type: string
            example: ''
        - name: orderId
          in: query
          schema:
            type: string
            example: ''
        - name: startTime
          in: query
          schema:
            type: string
            example: ''
        - name: endTime
          in: query
          schema:
            type: string
            example: ''
        - name: limit
          in: query
          schema:
            type: string
            example: '500'
          description: Default 500; max 1000.
        - name: recvWindow
          in: query
          schema:
            type: string
            example: '5000'
          description: The value cannot be greater than 60000
        - name: timestamp
          in: query
          schema:
            type: string
            example: '{{timestamp}}'
        - name: signature
          in: query
          schema:
            type: string
            example: '{{signature}}'
        - name: x-mbx-apikey
          in: header
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllOrdersResponse'
  /fapi/v1/forceOrders:
    get:
      tags:
        - Order
      summary: User's Force Orders (USER_DATA)
      description: User's Force Orders (USER_DATA)
      operationId: getUserSForceOrders
      parameters:
        - name: symbol
          in: query
          schema:
            type: string
            example: ''
        - name: autoCloseType
          in: query
          schema:
            type: string
            example: ''
        - name: startTime
          in: query
          schema:
            type: string
            example: ''
        - name: endTime
          in: query
          schema:
            type: string
            example: ''
        - name: limit
          in: query
          schema:
            type: string
            example: ''
        - name: recvWindow
          in: query
          schema:
            type: string
            example: '5000'
          description: The value cannot be greater than 60000
        - name: timestamp
          in: query
          schema:
            type: string
            example: '{{timestamp}}'
        - name: signature
          in: query
          schema:
            type: string
            example: '{{signature}}'
        - name: x-mbx-apikey
          in: header
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
  /fapi/v1/marginType:
    post:
      tags:
        - Trade
      summary: Change Margin Type
      description: Change Margin Type
      operationId: postMarginType
      parameters:
        - name: symbol
          in: query
          required: true
          description: Trading pair symbol (e.g., BTCUSDT)
          schema:
            type: string
        - name: marginType
          in: query
          required: true
          description: |
            Target margin type.
            ISOLATED or CROSS
          schema:
            type: string
            enum: ["ISOLATED", "CROSS"]
        - name: recvWindow
          in: query
          schema:
            type: string
            example: '5000'
          description: The value cannot be greater than 60000
        - name: timestamp
          in: query
          schema:
            type: string
            example: '{{timestamp}}'
        - name: signature
          in: query
          schema:
            type: string
            example: '{{signature}}'
        - name: x-mbx-apikey
          in: header
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
  /fapi/v1/leverage:
    post:
      tags:
        - Trade
      summary: Change Initial Leverage
      description: Change Initial Leverage
      operationId: postLeverage
      parameters:
        - name: symbol
          in: query
          required: true
          description: Trading pair symbol (e.g., BTCUSDT)
          schema:
            type: string
        - name: leverage
          in: query
          required: true
          description: |
            Target leverage value.
            Must be between the minimum and maximum leverage allowed for the symbol.
          schema:
            type: integer
            minimum: 1
            maximum: 125
        - name: recvWindow
          in: query
          schema:
            type: string
            example: '5000'
          description: The value cannot be greater than 60000
        - name: timestamp
          in: query
          schema:
            type: string
            example: '{{timestamp}}'
        - name: signature
          in: query
          schema:
            type: string
            example: '{{signature}}'
        - name: x-mbx-apikey
          in: header
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
  /fapi/v1/positionMargin:
    post:
      tags:
        - Trade
      summary: Modify Isolated Position Margin
      description: Modify Isolated Position Margin
      operationId: postPositionMargin
      parameters:
        - name: symbol
          in: query
          required: true
          description: Trading pair symbol (e.g., BTCUSDT)
          schema:
            type: string
        - name: positionSide
          in: query
          required: true
          description: Position side (BOTH/LONG/SHORT)
          schema:
            type: string
            enum: ["BOTH", "LONG", "SHORT"]
        - name: amount
          in: query
          required: true
          description: Amount of margin
          schema:
            type: string
        - name: type
          in: query
          required: true
          description: |
            Margin type (1: Add, 2: Reduce)
          schema:
            type: integer
            enum: [1, 2]
        - name: recvWindow
          in: query
          schema:
            type: string
            example: '5000'
          description: The value cannot be greater than 60000
        - name: timestamp
          in: query
          schema:
            type: string
            example: '{{timestamp}}'
        - name: signature
          in: query
          schema:
            type: string
            example: '{{signature}}'
        - name: x-mbx-apikey
          in: header
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionMarginResponse'
  /fapi/v1/positionMargin/history:
    get:
      tags:
        - Trade
      summary: Get Postion Margin Change History
      description: Get Postion Margin Change History
      operationId: getPositionMarginHistory
      parameters:
        - name: symbol
          in: query
          required: true
          description: Trading pair symbol (e.g., BTCUSDT)
          schema:
            type: string
        - name: type
          in: query
          required: true
          description: |
            Margin type (1: Add, 2: Reduce)
          schema:
            type: integer
            enum: [1, 2]
        - name: startTime
          in: query
          schema:
            type: string
            example: ''
        - name: endTime
          in: query
          schema:
            type: string
            example: ''
        - name: limit
          in: query
          schema:
            type: string
            example: '500'
        - name: recvWindow
          in: query
          schema:
            type: string
            example: '5000'
          description: The value cannot be greater than 60000
        - name: timestamp
          in: query
          schema:
            type: string
            example: '{{timestamp}}'
        - name: signature
          in: query
          schema:
            type: string
            example: '{{signature}}'
        - name: x-mbx-apikey
          in: header
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionMarginHistoryResponse'
  /fapi/v1/positionSide/dual:
    # get:
    #   tags:
    #     - Trade
    #   summary: Get Current Position Mode（USER_DATA）
    #   description: Get Current Position Mode（USER_DATA）
    #   operationId: getPositionSideDual
    #   parameters:
    #     - name: recvWindow
    #       in: query
    #       schema:
    #         type: string
    #         example: '5000'
    #       description: The value cannot be greater than 60000
    #     - name: timestamp
    #       in: query
    #       schema:
    #         type: string
    #         example: '{{timestamp}}'
    #     - name: signature
    #       in: query
    #       schema:
    #         type: string
    #         example: '{{signature}}'
    #     - name: x-mbx-apikey
    #       in: header
    #       schema:
    #         type: string
    #         example: '{{binance-api-key}}'
    #   responses:
    #     '200':
    #       description: ''
    #       content:
    #         application/json:
    #           schema:
    #             $ref: '#/components/schemas/PositionModeResponse'
    post:
      tags:
        - Trade
      summary: Change Position Mode（TRADE）
      description: Change Position Mode（TRADE）
      operationId: postPositionSideDual
      parameters:
        - name: dualSidePosition
          in: query
          description: 'Boolean value. "true": Hedge Mode mode; "false": One-way Mode'
          required: true
          schema:
            type: boolean
        - name: recvWindow
          in: query
          schema:
            type: string
            example: '5000'
          description: The value cannot be greater than 60000
        - name: timestamp
          in: query
          schema:
            type: string
            example: '{{timestamp}}'
        - name: signature
          in: query
          schema:
            type: string
            example: '{{signature}}'
        - name: x-mbx-apikey
          in: header
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionModeResponse'
  /fapi/v1/apiTradingStatus:
    get:
      tags:
        - Account
      summary: Account API Trading Status
      description: |
        Get current account's trading status on futures.
        Weight: 1
      security:
        - ApiKeyAuth: []
        - SignatureAuth: []
      parameters:
        - name: symbol
          in: query
          description: Trading pair symbol (e.g., BTCUSDT). If not sent, returns status for all symbols
          schema:
            type: string
        - name: recvWindow
          in: query
          description: |
            The value cannot be greater than 60000.
            Defines how long the request is valid for in milliseconds.
            Default: 5000
          schema:
            type: integer
            maximum: 60000
            default: 5000
        - name: timestamp
          in: query
          required: true
          description: Current timestamp in milliseconds
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Trading status information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiTradingStatusResponse'
  /fapi/v1/listenKey:
    put:
      tags:
        - Data Stream
      summary: Renew Listen Key
      description: Renew Listen Key
      operationId: putListenKey
      parameters:
        - name: x-mbx-apikey
          in: header
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListenKeyResponse'
    post:
      tags:
        - Data Stream
      summary: Create New Listen Key
      description: Create New Listen Key
      operationId: postListenKey
      parameters:
        - name: x-mbx-apikey
          in: header
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListenKeyResponse'
    delete:
      tags:
        - Data Stream
      summary: Delete Listen Key
      description: Delete Listen Key
      operationId: deleteListenKey
      parameters:
        - name: x-mbx-apikey
          in: header
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListenKeyResponse'
  /fapi/v1/pmAccountInfo:
    get:
      tags:
        - Portfolio Margin
      summary: Portfolio Margin Account Information
      description: Portfolio Margin Account Information
      operationId: getPMAccountInfo
      parameters:
        - name: asset
          in: query
          schema:
            type: string
            example: ''
        - name: recvWindow
          in: query
          schema:
            type: string
            example: '5000'
          description: The value cannot be greater than 60000
        - name: timestamp
          in: query
          schema:
            type: string
            example: '{{timestamp}}'
        - name: signature
          in: query
          schema:
            type: string
            example: '{{signature}}'
        - name: x-mbx-apikey
          in: header
          schema:
            type: string
            example: '{{binance-api-key}}'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioMarginAccountResponse'
tags:
  - name: Market
  - name: Account
  - name: Order
  - name: Trade
  - name: Data Stream
  - name: Portfolio Margin
components:
  schemas:
    ExchangeInfoResponse:
      type: object
      properties:
        exchangeFilters:
          type: array
          items:
            type: object
        rateLimits:
          type: array
          items:
            type: object
            properties:
              interval:
                type: string
                enum: [MINUTE]
              intervalNum:
                type: integer
              limit:
                type: integer
              rateLimitType:
                type: string
                enum: [REQUEST_WEIGHT, ORDERS]
        serverTime:
          type: integer
          format: int64
        assets:
          type: array
          items:
            type: object
            properties:
              asset:
                type: string
              marginAvailable:
                type: boolean
              autoAssetExchange:
                type: number
                nullable: true
        symbols:
          type: array
          items:
            type: object
            properties:
              symbol:
                type: string
              pair:
                type: string
              contractType:
                type: string
              deliveryDate:
                type: integer
                format: int64
              onboardDate:
                type: integer
                format: int64
              status:
                type: string
              maintMarginPercent:
                type: string
              requiredMarginPercent:
                type: string
              baseAsset:
                type: string
              quoteAsset:
                type: string
              marginAsset:
                type: string
              pricePrecision:
                type: integer
              quantityPrecision:
                type: integer
              baseAssetPrecision:
                type: integer
              quotePrecision:
                type: integer
              underlyingType:
                type: string
              underlyingSubType:
                type: array
                items:
                  type: string
              settlePlan:
                type: integer
              triggerProtect:
                type: string
              filters:
                type: array
                items:
                  type: object
                  properties:
                    filterType:
                      type: string
                    maxPrice:
                      type: string
                    minPrice:
                      type: string
                    tickSize:
                      type: string
                    maxQty:
                      type: string
                    minQty:
                      type: string
                    stepSize:
                      type: string
                    limit:
                      type: integer
                    notional:
                      type: string
                    multiplierUp:
                      type: string
                    multiplierDown:
                      type: string
                    multiplierDecimal:
                      type: integer
              OrderType:
                type: array
                items:
                  type: string
                  enum: [LIMIT, MARKET, STOP, STOP_MARKET, TAKE_PROFIT, TAKE_PROFIT_MARKET, TRAILING_STOP_MARKET]
              timeInForce:
                type: array
                items:
                  type: string
                  enum: [GTC, IOC, FOK, GTX]
              liquidationFee:
                type: string
              marketTakeBound:
                type: string
        timezone:
          type: string
    HistoricalTradesResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
            format: int64
            description: Trade ID
          price:
            type: string
            description: Price
          qty:
            type: string
            description: Quantity
          quoteQty:
            type: string
            description: Quote quantity
          time:
            type: integer
            format: int64
            description: Trade executed timestamp
          isBuyerMaker:
            type: boolean
            description: Was the buyer the maker?
    AggregateTradesResponse:
      type: array
      items:
        type: object
        properties:
          a:
            type: integer
            format: int64
            description: Aggregate trade ID
          p:
            type: string
            description: Price
          q:
            type: string
            description: Quantity (aggregated)
          f:
            type: integer
            format: int64
            description: First trade ID in the aggregate
          l:
            type: integer
            format: int64
            description: Last trade ID in the aggregate
          T:
            type: integer
            format: int64
            description: Timestamp
          m:
            type: boolean
            description: Was the buyer the maker?
    OrderResponse:
      type: object
      properties:
        clientOrderId:
          type: string
          description: Client order ID
        cumQty:
          type: string
          description: Cumulative filled quantity
        cumQuote:
          type: string
          description: Cumulative quote asset filled quantity
        executedQty:
          type: string
          description: Executed quantity
        orderId:
          type: integer
          format: int64
          description: Order ID
        avgPrice:
          type: string
          description: Average fill price
        origQty:
          type: string
          description: Original quantity
        price:
          type: string
          description: Order price
        reduceOnly:
          type: boolean
          description: Reduce only flag
        side:
          type: string
          description: Order side (BUY/SELL)
          enum: ["BUY", "SELL"]
        positionSide:
          type: string
          description: Position side (BOTH/LONG/SHORT)
          enum: ["BOTH", "LONG", "SHORT"]
        status:
          type: string
          description: Order status
          enum: ["NEW", "PARTIALLY_FILLED", "FILLED", "CANCELED", "REJECTED", "EXPIRED"]
        stopPrice:
          type: string
          description: Stop price
        closePosition:
          type: boolean
          description: Close position flag
        symbol:
          type: string
          description: Trading pair symbol
        timeInForce:
          type: string
          description: Time in force
          enum: ["GTC", "IOC", "FOK", "GTX"]
        type:
          type: string
          description: Order type
          enum: ["LIMIT", "MARKET", "STOP", "STOP_MARKET", "TAKE_PROFIT", "TAKE_PROFIT_MARKET", "TRAILING_STOP_MARKET"]
        origType:
          type: string
          description: Original order type
          enum: ["LIMIT", "MARKET", "STOP", "STOP_MARKET", "TAKE_PROFIT", "TAKE_PROFIT_MARKET", "TRAILING_STOP_MARKET"]
        activatePrice:
          type: string
          description: Activation price for trailing stop orders
        priceRate:
          type: string
          description: Callback rate for trailing stop orders
        updateTime:
          type: integer
          format: int64
          description: Last update timestamp
        workingType:
          type: string
          description: Working type (MARK_PRICE/CONTRACT_PRICE)
          enum: ["MARK_PRICE", "CONTRACT_PRICE"]
        priceProtect:
          type: boolean
          description: Price protection flag
    BatchOrdersResponse:
      type: array
      items:
        $ref: '#/components/schemas/OrderResponse'
    OrderAmendmentHistoryResponse:
      type: array
      items:
        type: object
        properties:
          amendId:
            type: integer
            format: int64
            description: Amendment ID
          symbol:
            type: string
            description: Trading pair symbol
          orderId:
            type: integer
            format: int64
            description: Order ID
          clientOrderId:
            type: string
            description: Client order ID
          oldClientOrderId:
            type: string
            description: Previous client order ID
          oldPrice:
            type: string
            description: Previous price
          oldQty:
            type: string
            description: Previous quantity
          price:
            type: string
            description: New price
          qty:
            type: string
            description: New quantity
          amendTime:
            type: integer
            format: int64
            description: Amendment timestamp
          amendStatus:
            type: string
            description: Amendment status
            enum: ["ACCEPTED", "REJECTED"]
          rejectReason:
            type: string
            description: Rejection reason if amendment was rejected
    UserTradesResponse:
      type: array
      items:
        type: object
        properties:
          buyer:
            type: boolean
            description: True if the trade was a buy
          commission:
            type: string
            description: Commission charged for the trade
          commissionAsset:
            type: string
            description: Asset in which commission was charged
          id:
            type: integer
            format: int64
            description: Trade ID
          maker:
            type: boolean
            description: True if the trade was a maker trade
          orderId:
            type: integer
            format: int64
            description: Order ID
          price:
            type: string
            description: Trade price
          qty:
            type: string
            description: Trade quantity
          quoteQty:
            type: string
            description: Quote quantity
          realizedPnl:
            type: string
            description: Realized profit and loss
          side:
            type: string
            description: Trade side (BUY/SELL)
            enum: ["BUY", "SELL"]
          positionSide:
            type: string
            description: Position side (BOTH/LONG/SHORT)
            enum: ["BOTH", "LONG", "SHORT"]
          symbol:
            type: string
            description: Trading pair symbol
          time:
            type: integer
            format: int64
            description: Trade timestamp
    OpenOrdersResponse:
      type: array
      items:
        $ref: '#/components/schemas/OrderResponse'
    AllOrdersResponse:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/OrderResponse'
          - type: object
            properties:
              time:
                type: integer
                format: int64
                description: Order creation time
              updateTime:
                type: integer
                format: int64
                description: Last update time
    LeverageResponse:
      type: object
      properties:
        symbol:
          type: string
          description: Trading pair symbol
        leverage:
          type: integer
          description: Leverage value
        maxNotionalValue:
          type: string
          description: Maximum notional value
    PositionMarginResponse:
      type: object
      properties:
        amount:
          type: string
          description: Amount of margin
        code:
          type: integer
          description: Response code
        msg:
          type: string
          description: Response message
        type:
          type: integer
          description: |
            Margin type (1: Add, 2: Reduce)
    PositionMarginHistoryResponse:
      type: array
      items:
        type: object
        properties:
          amount:
            type: string
            description: Amount of margin
          asset:
            type: string
            description: Asset used for margin
          symbol:
            type: string
            description: Trading pair symbol
          time:
            type: integer
            format: int64
            description: Operation time
          type:
            type: integer
            description: |
              Margin type (1: Add, 2: Reduce)
          positionSide:
            type: string
            description: Position side (BOTH/LONG/SHORT)
    PositionModeResponse:
      type: object
      properties:
        code:
          type: integer
          description: Response code
        msg:
          type: string
          description: Response message
    PositionRiskResponse:
      type: array
      items:
        type: object
        properties:
          entryPrice:
            type: string
            description: Entry price
          marginType:
            type: string
            description: Margin type (isolated or cross)
          isAutoAddMargin:
            type: boolean
            description: Is auto add margin enabled
          isolatedMargin:
            type: string
            description: Isolated margin
          leverage:
            type: string
            description: Current leverage
          liquidationPrice:
            type: string
            description: Liquidation price
          markPrice:
            type: string
            description: Mark price
          maxNotional:
            type: string
            description: Maximum notional
          positionAmt:
            type: string
            description: Position amount
          symbol:
            type: string
            description: Trading pair symbol
          unRealizedProfit:
            type: string
            description: Unrealized profit
          positionSide:
            type: string
            description: Position side (BOTH, LONG or SHORT)
          updateTime:
            type: integer
            format: int64
            description: Update time
    ApiTradingStatusResponse:
      type: object
      properties:
        isLocked:
          type: boolean
          description: API trading function is locked or not
        plannedRecoverTime:
          type: integer
          format: int64
          description: If API trading function is locked, this is the planned recover time
        triggerCondition:
          type: object
          properties:
            GCR:
              type: integer
              description: Number of GTC orders
            IFER:
              type: integer
              description: Number of FOK/IOC orders
            UFR:
              type: integer
              description: Number of orders
        updateTime:
          type: integer
          format: int64
          description: Last update time
        indicators:
          type: object
          properties:
            BTCUSDT:
              type: object
              properties:
                IFER:
                  type: integer
                  description: FOK/IOC order count of the symbol
                GCR:
                  type: integer
                  description: GTC order count of the symbol
                UFR:
                  type: integer
                  description: Order count of the symbol
    ListenKeyResponse:
      type: object
      properties:
        listenKey:
          type: string
          description: User data stream listen key
    PortfolioMarginAccountResponse:
      type: object
      properties:
        totalCollateral:
          type: string
          description: Total collateral value in USD
        totalMarginBalance:
          type: string
          description: Total margin balance in USD
        totalInitialMargin:
          type: string
          description: Total initial margin required in USD
        totalMaintenanceMargin:
          type: string
          description: Total maintenance margin required in USD
        totalPositionInitialMargin:
          type: string
          description: Total position initial margin in USD
        totalOpenOrderInitialMargin:
          type: string
          description: Total open order initial margin in USD
        totalUnrealizedProfit:
          type: string
          description: Total unrealized profit in USD
        totalLiabilities:
          type: string
          description: Total liabilities in USD
        availableBalance:
          type: string
          description: Available balance in USD
        assets:
          type: array
          description: List of asset details
          items:
            type: object
            properties:
              asset:
                type: string
                description: Asset name
              walletBalance:
                type: string
                description: Wallet balance
              unrealizedProfit:
                type: string
                description: Unrealized profit
              marginBalance:
                type: string
                description: Margin balance
              maintMargin:
                type: string
                description: Maintenance margin
              initialMargin:
                type: string
                description: Initial margin
              positionInitialMargin:
                type: string
                description: Position initial margin
              openOrderInitialMargin:
                type: string
                description: Open order initial margin
              maxWithdrawAmount:
                type: string
                description: Maximum withdrawable amount
        positions:
          type: array
          description: List of positions
          items:
            type: object
            properties:
              symbol:
                type: string
                description: Trading pair symbol
              positionAmount:
                type: string
                description: Position amount
              entryPrice:
                type: string
                description: Entry price
              markPrice:
                type: string
                description: Mark price
              unRealizedProfit:
                type: string
                description: Unrealized profit
              liquidationPrice:
                type: string
                description: Liquidation price
              leverage:
                type: string
                description: Position leverage
              marginType:
                type: string
                description: Margin type (isolated or cross)
              isolatedMargin:
                type: string
                description: Isolated margin
              positionSide:
                type: string
                description: Position side (BOTH/LONG/SHORT)
    KlinesResponse:
      type: array
      items:
        type: array
        description: Kline/candlestick data
        items:
          oneOf:
            - type: integer
              format: int64
              description: Kline open time
            - type: string
              description: Open price
            - type: string
              description: High price
            - type: string
              description: Low price
            - type: string
              description: Close price
            - type: string
              description: Volume
            - type: integer
              format: int64
              description: Kline close time
            - type: string
              description: Quote asset volume
            - type: integer
              description: Number of trades
            - type: string
              description: Taker buy base asset volume
            - type: string
              description: Taker buy quote asset volume
    PremiumIndexResponse:
      type: array
      items:
        type: object
        properties:
          symbol:
            type: string
            description: Trading pair symbol
          markPrice:
            type: string
            description: Mark price
          indexPrice:
            type: string
            description: Index price
          estimatedSettlePrice:
            type: string
            description: Estimated settle price
          lastFundingRate:
            type: string
            description: Last funding rate
          nextFundingTime:
            type: integer
            format: int64
            description: Next funding time
          interestRate:
            type: string
            description: Interest rate
          time:
            type: integer
            format: int64
            description: Update time
    FundingRateResponse:
      type: array
      items:
        type: object
        properties:
          symbol:
            type: string
            description: Trading pair symbol
          fundingRate:
            type: string
            description: Funding rate
          fundingTime:
            type: integer
            format: int64
            description: Funding time
    TickerPriceChangeResponse:
      type: array
      items:
        type: object
        properties:
          symbol:
            type: string
            description: Trading pair symbol
          priceChange:
            type: string
            description: Price change
          priceChangePercent:
            type: string
            description: Price change percent
          weightedAvgPrice:
            type: string
            description: Weighted average price
          lastPrice:
            type: string
            description: Last price
          lastQty:
            type: string
            description: Last quantity
          openPrice:
            type: string
            description: Open price
          highPrice:
            type: string
            description: High price
          lowPrice:
            type: string
            description: Low price
          volume:
            type: string
            description: Total volume
          quoteVolume:
            type: string
            description: Total quote volume
          openTime:
            type: integer
            format: int64
            description: Open time
          closeTime:
            type: integer
            format: int64
            description: Close time
          firstId:
            type: integer
            format: int64
            description: First trade ID
          lastId:
            type: integer
            format: int64
            description: Last trade ID
          count:
            type: integer
            description: Total number of trades
    SymbolPriceTickerResponse:
      type: array
      items:
        type: object
        properties:
          symbol:
            type: string
            description: Trading pair symbol
          price:
            type: string
            description: Latest price
          time:
            type: integer
            format: int64
            description: Update time

    BookTickerResponseO:
      type: object
      properties:
        symbol:
          type: string
          description: Trading pair symbol
        bidPrice:
          type: string
          description: Best bid price
        bidQty:
          type: string
          description: Best bid quantity
        askPrice:
          type: string
          description: Best ask price
        askQty:
          type: string
          description: Best ask quantity
        time:
          type: integer
          format: int64
          description: Update time

    BookTickerResponseA:
      type: array
      items:
        $ref: '#/components/schemas/BookTickerResponseO'

    MarkPriceResponse:
      type: array
      items:
        type: object
        properties:
          symbol:
            type: string
            description: Trading pair symbol
          markPrice:
            type: string
            description: Mark price
          indexPrice:
            type: string
            description: Index price
          lastFundingRate:
            type: string
            description: Last funding rate
          nextFundingTime:
            type: integer
            format: int64
            description: Next funding time
          time:
            type: integer
            format: int64
            description: Update time

    MultiAssetsMarginResponse:
      type: object
      properties:
        code:
          type: integer
          description: Response code
        msg:
          type: string
          description: Response message
        multiAssetsMargin:
          type: boolean
          description: true-Multi-Assets Mode, false-Single-Asset Mode
